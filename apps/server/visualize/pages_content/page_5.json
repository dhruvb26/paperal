["Preprint", "We show that this is possible and the resulting test resembles a series of log probability comparisons followed by a t-test to aggregate these results. More specifically, we will partition the examples X1, \u00b7 \u00b7 \u00b7 , Xn into r contiguous shards S1 . . . Sr formed by grouping together adjacent examples", "S1 = (X1, X2, \u00b7 \u00b7 \u00b7 , Xk)", "where each shard Si contains at least k = n/r examples.", "Then, we will permute the examples within each shard and compare the likelihood of the canonical ordering to a Monte Carlo estimate of the average likelihood of the shuffled ordering as", "si := log p\u03b8(seq(X)) \u2212 Mean\u03c0(log p\u03b8(seq(X\u03c0))).", "Finally, to construct the test, we aggregate these shard statistics si via the mean s = 1", "test for whether s is zero-mean using a t-test. r i=1 si and", "This statistical test, whose pseudocode is given in Algorithm 1, addresses the shortcoming of the permutation test by converting a single rank comparison into a collection of log probability com- parisons. The t-test based approach also requires O(m|X|) runtime for m permutations, but there is no 1/m minimum p-value, and in practice we find that the p-values obtained by this approach decay rapidly, as it only requires that the language models consistently assign higher-than-average log probabilities to the canonical ordering, rather than requiring that the canonical log probability be in the tails of the permutation null distribution.", "Algorithm 1 Sharded Rank Comparison Test", "Require: Test set examples x1, . . . , xn Require: Target model \u03b8 Require: Number of shards r Require: Number of permutations per shard m", "1: Partition the examples into shards S1, S2, \u00b7 \u00b7 \u00b7 , Sr, where each shard has at least \u230an/r\u230b exam- ples, and one extra example is added to the first n mod r shards.", "2: for each shard S; do 3: Compute the log-likelihood of the canonical order: 4: Estimate 1 rea := Mean, [log po(seq(as),), vee woh) over m random permutations 7. = [0 (\u00e9) Compute $i = lcahonical ~ 'shutited end for : Define s = Fe 7-1 si the sample average over the shards. ))] by computing the sample average CIDN", "8: Run a one-sided t-test for E[si] > 0, returning the associated p-value of the test as p.", "Under the null, we expect s to be the sum of independent random variables and we can now show that the overall test provides a false positive rate guarantee.", "Theorem 2. Under the null hypothesis, an i.i.d dataset X, and finite second moments on log\u03b8(S),", "|P (p < \u03b1) \u2212 \u03b1| \u2192 0", "as m \u2192 \u221e and p is defined as the p-value in Algorithm 1.", "Proof The result follows directly from the combination of Theorem 1 and standard invari- ance results in (Lehmann & Romano, 2005). First, by Theorem 1, note that the distribution of log p\u03b8(seq(x(i) \u03c0(1), \u00b7 \u00b7 \u00b7 , x(i) \u03c0(k)) is invariant to the permutation \u03c0.", "By Lehmann & Romano (2005, Theorem 15.2.2), this guarantees that the permutation distribution is uniform over the support, and the statistic si must be zero-mean. Next, we note that each shard is independent, as each example is split independently into a separate shard with no overlap. \u221a By independence and the finite second moment condition, s \u2192 N (0, \u03c32/ m) under the null by the central limit theorem and a one sided t-test provides asymptotically valid p-values with", "5"]